#!/bin/bash

# Manually set preferences
# Caps Lock -> Control for all keyboards
# Reverse scrolling direction

# Dark mode
osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to true'

DOTFILES_DIR="$HOME/dotfiles"

# Append a shim to load your dotfiles zshrc
ZSHRC="$HOME/.zshrc"
cat >> "$ZSHRC" <<EOF

# Load dotfiles zsh config
if [ -f "$DOTFILES_DIR/zsh/.zshrc" ]; then
  source "$DOTFILES_DIR/zsh/.zshrc"
fi
EOF
echo "✅ Appended dotfiles source block to $ZSHRC"

HOME_GITCONFIG="$HOME/.gitconfig"
HOME_LOCAL="$HOME/.gitconfig.local"         # local only (created if missing)
HOME_WORK="$HOME/.gitconfig.work"           # local only (created if missing)

# 1) Create ~/.gitconfig (shim) if missing — reference repo files directly
if [ ! -f "$HOME_GITCONFIG" ]; then
  cat > "$HOME_GITCONFIG" <<EOF
# Generated by bootstrap.sh — do not track.

# Base config tracked in your repo:
[include]
  path = $DOTFILES_DIR/git/.gitconfig.common

# Personal identity via remote-based matching (also tracked in your repo).
[includeIf "hasconfig:remote.*.url:git@github.com:bencalabrese/**"]
  path = $DOTFILES_DIR/git/.gitconfig.personal
[includeIf "hasconfig:remote.*.url:https://github.com/bencalabrese/**"]
  path = $DOTFILES_DIR/git/.gitconfig.personal

# Per-machine overrides (untracked):
[include]
  path = ~/.gitconfig.local
EOF
  echo "✅ created $HOME_GITCONFIG"
else
  echo "ℹ️  $HOME_GITCONFIG exists — leaving as-is"
fi

# 2) Create ~/.gitconfig.local (machine-specific) if missing
if [ ! -f "$HOME_LOCAL" ]; then
  cat > "$HOME_LOCAL" <<'EOF'
# Machine-specific overrides & secrets — DO NOT TRACK.

# Work context via remote URL (uncomment & set your org):
# [includeIf "hasconfig:remote.*.url:git@github.com:<your-company-org>/**"]
#   path = ~/.gitconfig.work
# [includeIf "hasconfig:remote.*.url:https://github.com/<your-company-org>/**"]
#   path = ~/.gitconfig.work
EOF
  echo "✅ created $HOME_LOCAL"
else
  echo "ℹ️  $HOME_LOCAL exists — leaving as-is"
fi

# 3) Create ~/.gitconfig.work (machine-specific) template if missing
if [ ! -f "$HOME_WORK" ]; then
  cat > "$HOME_WORK" <<'EOF'
# ~/.gitconfig.work
# Work identity — DO NOT TRACK. Uncomment and edit to enable.

# [user]
#   name = Ben Calabrese
#   email = you@company.com
#   # signingKey = ~/.ssh/id_ed25519_work.pub

# [commit]
#   gpgsign = true

# [gpg]
#   format = ssh

# [core]
#   # hooksPath = /Library/Application Support/YourOrg/Tools/git-hooks
# [lfs]
#   # hooksPath = /Library/Application Support/YourOrg/Tools/git-hooks/lfs
EOF
  echo "✅ created $HOME_WORK template"
else
  echo "ℹ️  $HOME_WORK exists — leaving as-is"
fi
